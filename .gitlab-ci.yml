variables:
  ARTIFACTORY_URL: $ARTIFACTORY_URL
  ARTIFACTORY_USERNAME: $ARTIFACTORY_USER
  ARTIFACTORY_KEY: $ARTIFACTORY_KEY
  CI: 'true'

  REPO_SERVER: artifactory
  REPO_DEPLOY: dhei-pandora-go
  REPO_RESOLVE: pandora-go-virtual

stages:
  - test
  - publish

test-with-coverage:
  image: mtr.devops.telekom.de/tardis-internal/pandora/jfrog:1.1.0
  stage: test
  before_script:
    - jf c add artifactory --artifactory-url $ARTIFACTORY_URL --user $ARTIFACTORY_USERNAME --password $ARTIFACTORY_KEY
    - jf go-config --repo-resolve $REPO_RESOLVE --repo-deploy $REPO_DEPLOY --server-id-deploy $REPO_SERVER --server-id-resolve $REPO_SERVER
    - jf go mod download
  script:
    - go test ./... -v -coverprofile=coverage.txt -covermode count
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.txt > coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

publish:
  image: mtr.devops.telekom.de/tardis-internal/pandora/jfrog:1.1.0
  stage: publish
  only:
    refs:
      - tags
  before_script:
    - jf c add artifactory --artifactory-url $ARTIFACTORY_URL --user $ARTIFACTORY_USERNAME --password $ARTIFACTORY_KEY
    - jf go-config --repo-resolve $REPO_RESOLVE --repo-deploy $REPO_DEPLOY --server-id-deploy $REPO_SERVER --server-id-resolve $REPO_SERVER
  script:
    - jf go-publish v$CI_COMMIT_TAG
